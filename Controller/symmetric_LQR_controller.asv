% Define matrices A, B, C, D
 
A = [8.56146015e-03, -2.10399095e-02,  8.42803062e-02, 0;
     1.61337624e-02,  9.36061499e-01,  0, -1.45380375e+01;
     0, 0, 0, -1.45380375e+01;
    -5.94627222e-04,  5.77467784e+01,  0, -7.83447148e+02];

B = [2.25872674e-04;
     1.39230795e-04;
     0;
     7.53349544e-01];

C = [1, 0, 0, 0;
     0, 1, 0, 0;
     0, 0, 1, 0;
     0, 0, 0, 14.5380375];

D = [0;
     0;
     0;
     0];

% Define Q and R matrices
Q = eye(4) * 10; 
R = 1; 

% Compute LQR controller
[K, S, P] = lqr(A, B, Q, R);

disp('get those gainz:')
disp(K);
% Compute the state-space representation
sys = ss(A, B, C, D);
sys_cl = feedback(sys,K);

%x0 = [0.1,0.05,0.02,0];
%sys_cl = ss(A-K*B,B,C,D);


x0 = [118.4, 0.06, 0.05, 0.01];
xref = [116.5, 0.05, 0.04, 0];

error0 = x0-xref;

t = 0:0.1:20;
[y,tOut,error0] = initial(sys_cl,error0,t);
y_ = y+xref;
% Plot the response of the closed-loop system
figure;
for i = 1:4
    subplot(1, 4, i); % Create a 1-by-4 grid of subplots
    plot(tOut, y_(i, :)); % Plot the i-th state
    xlabel('Time (s)'); % Label for x-axis
    ylabel('System Response'); % Label for y-axis
    title(['State ' num2str(i)]); % Title for each subplot
    grid on; % Enable grid
end





